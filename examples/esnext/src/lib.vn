@!target(web)

// Variables

@js(const)
pub extern Infinity: number

@js(const)
pub extern NaN: number

pub extern undefined: ()

// Functions

pub extern eval(): fn() -> any

@pure
pub extern isFinite: fn(value: any) -> bool

@pure
pub extern isNaN: fn(value: any) -> bool

pub extern parseFloat: fn(value: any) -> number

pub extern parseInt: fn(value: str, radix: number?) -> number

@js_may_throw(URIError)
pub extern decodeURI: fn(value: any) -> str

@refer("https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent")
@js(may_throw(URIError))
pub extern decodeURIComponent: fn(value: any) -> str

@refer("https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI")
@js(may_throw(URIError))
pub extern encodeURI: fn(value: any) -> str

@refer("https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent")
@js(may_throw(URIError))
pub extern encodeURIComponent: fn(value: any) -> str

// Objects

@js(construct() -> Object)
@callable()
pub extern Object (
    @js(may_throw(TypeError))
    assign: fn(target: object, ...sources: object[])
)

pub extern Function (
)